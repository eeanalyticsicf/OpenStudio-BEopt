NREL Measure Design Document Text File

Note: you can include ruby snippets for arguments and messaged, but it isn't necessary. If you are comfortable with it, it makes writing the measure quicker if the code is already structured here.

EnergyPlus 8.1 documentation reference: http://bigladdersoftware.com/epx/docs/8-1/input-output-reference/page-008.html#sitewatermainstemperature

>> Start of XML content

Measure Name: 	Add OS:WaterHeater:Mixed-Storage-Electric
Measure Type: 	ModelMeasure

Tag		Service Hot Water.Water Heating

Description:
This measure adds an OS:WaterHeater:Mixed object representing an Electric Storage Water Heater. Users will be asked to provide 1) Use Case 2) Number of Bedrooms 3) Number of Bathrooms 4) Plant Loop 
Assignment 5) Tank Volume 6) Rated Energy Factor 7) Setpoint Temperature 8) Water Heater Location, 9) Water Heater Nominal Capacity 

Model Description:
The measure will create a new instance of the OS:WaterHeater:Mixed object. The object will either create a new plant loop, or be assigned to an existing plant loop
The object will be configured be to use the user arguments.The EIO file reports the industry standard ratings of Recovery Efficiency and Energy Factor for water heater objects.


OpenStudio Version: 1.4.0

>> Start of Measure.rb content

Arguments:


1) 1) Choice list of object_to_be_created (Create a  water heater representing B10 Benchmark standard, Create a  water heater representing NCTH standard, Create a  water heater representing BA Pre-Retrofit Case standard, General)
	Required:			Yes
	Type: 				StringVector (List of use cases)
	Display Name: 		How will this measure be used?
	Default Value:		N/A
	NOTE: This choice will drive lookups into tables defined by 2014 Building America Simulation Protocol. 

2) number_Of_Bedrooms
	Required:			Yes
	Type: 				IntegerArgument (1, 2, 3, 4, 5)
	Display Name: 		Number of Bedrooms in the Proposed Home
	Default Value:		N/A

3) number_Of_Bathrooms
	Required:			Yes
	Type: 				StringVector (1, 1.5, 2, 2.5, 3, 3.5 or more) 
	Display Name: 		Number of Bathrooms in the Proposed Home
	Default Value:		N/A
		
4) Choice list of existing_Plant_Loop_name
	Required:			Yes
	Type: 				StringVector (List of Plant Loops available in the model)
	Display Name: 		Plant Loop to assign Water heater as a Supply Equipment
	Default Value:		N/A
	NOTE: One choice should be to make a new heating water plant loop object 

5) storage_Tank_Volume
	Required:			Yes
	Type: 				DoubleArgument
	Display Name: 		Volume of the Storage Tank (gallons) of the Electric Hot Water Heater. Set to 0 to have Storage tank volume autosized. Set to -1 to follow 2104 BA House Protocols." 
	Default Value:		N/A
	## NOTE If object_to_be _created <> General this will be required to be a lookup

6) rated_Energy_Factor
	Required:			Yes
	Type: 				DoubleArgument
	Display Name: 		Rated Energy Factor of Electric Storage Tank Water Heater

7) shw_Setpoint_Temperature
	Required:			Yes
	Type: 				Double Argument
	Display Name: 		Hot Water Temperature Setpoint
	Default Value:		N/A

8) Choice List of water_Heater_Location
	Required:			Yes
	Type: 				StringVector (List of Thermal Zones available in Model)
	Display Name: 		Thermal Zone where the Electric Storage Water Heater is located.
	Default Value:		N/A

9) water_Heater_Nominal_Capacity
	Required:		Yes
	Type: 			DoubleArgument
	Display Name: 		The nominal capacity [W] of the electric storage water heater. Set to 0 to have this field autosized. Set to -1 to follow 2104 BA House Protocols."  
	Default Value:		N/A


## NOTE ## For Electric Storage Tank water heaters ONLY, Recovery Efficiency is ALWAYS 0.98 thus is NOT a user argument

##Water heater performance data from here: https://www.ahridirectory.org/ahridirectory/pages/rwh/defaultSearch.aspx


Error Messages:

If OS.SizingPlant.loopType <> "Heating" then write error message "Water Heater must be adder to the supply side of an existing heating plant loop."
	
If shw_Setpoint_Temperature < 0 then write error message "Hot water temperature should be > 0."

If Storage Tank Volume < 0 and <> -1 then write error message "Storage Tank Volume cannot be < 0 gallons. Please correct."

If rated_Energy_Factor  > 1.0 then write error message "Rated Energy Factor has a maximum value of 1.0"

If rated_Energy_Factor < 0 and <> -1 then write error message "Rated Energy Factor must be > 0."

If Water Heater Nominal Capacity < 0 and <> -1 then write error message "Electric Storage Water Heater Nominal Capacity must be > 0 kW."


Warning Messages:

If OS:Plant Loop already has a water heater attached, then write warning message "Additional Water heater being added to <plantLoopNam>. User will need to confirm controls."
If new OS Plant loop is created then write warning message"The water heater will be applied to a new OS:PlantLoop object. The plant loop object will be created using default values.
															please review the values for appropriateness."

If shw_Setpoint_Temperature > 140 F then write warning message "Hot Water Setpoint schedule <schedule name> has values > 140F. This temperature, if achieved, may cause scalding."
If shw_Setpoint_Temperature < 120 F then write warning message""Hot Water Setpoint schedule <schedule name> has values < 120. This temperature may promote the growth of Legionellae or other bacteria."

If Storage Tank Volume < 25 then write warning message "Electric Storage Waters with a storage tank volume of less than 25 gallons are not commercially available. Please review the input."
If Storage Tank Volume > 125 then write warning message "Electric Storage Water Heaters with a storage tank volume of greater than 125 gallons are not commercially available. Please review the input."

If Rated Energy Factor < 0.80 then write warning message "Rated Energy Factor for Commercially available Electric Storage Water Heaters should be > 0.80."

If Water Heater Nominal Capacity < 2.0 kW then write warning message"Commercially Available Electric Storage Water Heaters should have a minimum Nominal Capacity of 2.0 kW."
If Water Heater Nominal Capacity > 6.0 kW then write warning message"Commercially Available Electric Storage Water Heaters should have a maximum Nominal Capacity of 6.0 kW."


If building_America_Use_Case = New Construction then write warning message "BA protocols require water heater location to be in attached garage (if it exists and climate = hot-humid or hot-dry or unconditioned basement if it exists and climate = all others). Please check table 9 of 2014 simulauiton protocols."


Not Applicable Messages:

None

Initial Conditions:

#Report any current names and associated plant loop name of existing OS:WaterHeater:Mixed object. Report Size (gal) and nominal Capacity (W) of each object.


Final Condition:

#If new Hot Water plant loop was created, report the name of the new hot water loop
#Report the name of new OS:WaterHeater:Mixed object. Report Size (gal) and nominal Capacity (W) of each object.

Code Outline:


>> Start of MyMeasure_Test.rb content

# Get arguments from user

# convert argument method variable into run method variables

# test run method variable for warning messages

# test model for N/A message

# Write Initial Conditions message

# Convert all input variables collected in IP units into SI equivalents (Fahrenheit to Celsius, etc..)  ##E+ works in SI only##


IF new plant loop needed 

	## Create a new plant loop

	    	shw_loop = OpenStudio::Model::PlantLoop.new(model)
	    	shw_loop.setName("Service Hot Water Loop")
    		shw_sizing_plant = shw_loop.sizingPlant
    		shw_sizing_plant.setLoopType("Heating")
    		shw_sizing_plant.setDesignLoopExitTemperature(60) # note 60 Deg C = 150F
    		shw_sizing_plant.setLoopDesignTemperatureDifference(50) # Note 60C - 10C = 50C    

       	## Create a new pump

    		shw_pump = OpenStudio::Model::PumpConstantSpeed.new(model)


	## Configure pump for consuming near zero energy

		shw_pump.setFractionofMotorInefficienciestoFluidStream(1)
		shw_pump.setMotorEfficiency(0.999)
		shw_pump.ratedFlowRate(autosized)
		shw_pump.setPumpControlType(Intermittent)
		shw_pump.setRatedPowerConsumption(0.001)
		shw_pump.setRatedPumpHead(0.001)


	## create shw system bypass pipe
		
		shw_heater_bypass_pipe = OpenStudio::Model::PipeAdiabatic.new(model)
        
    	## create shw supply outlet pipe

		shw_supply_outlet_pipe = OpenStudio::Model::PipeAdiabatic.new(model) 

	## create schedule for hot water heater temperature and create a new scheduled setpoint manager to assign the schedule to 

		shw_t_c = OpenStudio::convert(shw_Setpoint_Temperature,"F","C").get
    		shw_t_sch = OpenStudio::Model::ScheduleRuleset.new(model)
    		shw_t_sch.setName("SHW Temp")
    		shw_t_sch.defaultDaySchedule().setName("HW Temp Default")
    		shw_t_sch.defaultDaySchedule().addValue(OpenStudio::Time.new(0,24,0,0),shw_t_c)
    		shw_t_stpt_manager = OpenStudio::Model::SetpointManagerScheduled.new(model,shw_t_sch)

	## create new water heater object

		shw_heater = OpenStudio::Model::WaterHeaterMixed.new(model)

	## Configure new water heater object

		(See details below)
                                                    
    	## Add the components to the service water loop

    		shw_supply_inlet_node = shw_loop.supplyInletNode
    		shw_supply_outlet_node = shw_loop.supplyOutletNode
    		shw_pump.addToNode(shw_supply_inlet_node)
    		shw_loop.addSupplyBranchForComponent(shw_heater)
    		shw_loop.addSupplyBranchForComponent(shw_bypass_pipe)
    		shw_supply_outlet_pipe.addToNode(shw_supply_outlet_node)
  
	## Add setpoint manager to supply outlet node

  		shw_t_stpt_manager.addToNode(shw_supply_outlet_node) 

If existing plant loop selected

	
	## Choose loop from selected loop 

		shw_loop = OpenStudio::Model::PlantLoop.name(existing_Plant_Loop_name)  ##NOT SURE IF THIS WILL WORK## 

       	## See if loop pump already exists within slected plant loop, if not then create a new pump

		    		
		If shw_pump.name = "empty" then shw_pump = OpenStudio::Model::PumpConstantSpeed.new(model)  ##CERTAIN THAT THIS WILL NOT WORK##

	## If a new pump is created, configure new pump for consuming near zero energy

		shw_pump.setFractionofMotorInefficienciestoFluidStream(1)
		shw_pump.setMotorEfficiency(0.999)
		shw_pump.ratedFlowRate(autosized)
		shw_pump.setPumpControlType(Intermittent)
		shw_pump.setRatedPowerConsumption(0.001)
		shw_pump.setRatedPumpHead(0.001)


	# create schedule for hot water heater temperature and create a new scheduled setpoint manager to assign the schedule to 

		shw_t_c = OpenStudio::convert(shw_Setpoint_Temperature,"F","C").get
    		shw_t_sch = OpenStudio::Model::ScheduleRuleset.new(model)
    		shw_t_sch.setName("SHW Temp")
    		shw_t_sch.defaultDaySchedule().setName("HW Temp Default")
    		shw_t_sch.defaultDaySchedule().addValue(OpenStudio::Time.new(0,24,0,0),shw_t_c)
    		
	## create new water heater object

		shw_heater = OpenStudio::Model::WaterHeaterMixed.new(model)

	## Configure new water heater object

		(See details below)
                                                     
    	## Add new water heater to the existing service water loop

		shw_loop.addSupplyBranchForComponent(shw_heater)

	## If new pump created add to existing loop

    		shw_pump.addToNode(shw_supply_inlet_node)
	

	##Check what is on the supply outlet node of the existing loop - setpoint manager or something else.  ## needs to be written in ruby###
		
	## If a new setpoint manager is needed, create one and assign it to the supply outlet node..

		shw_t_stpt_manager = OpenStudio::Model::SetpointManagerScheduled.new(model,setpoint_Temperature_Schedule_Name)
		shw_t_stpt_manager.addToNode(shw_supply_outlet_node) 

	##Write initial conditions message
	
		Initial conditions message should indicate the number of OS:WaterHeater:Mixed objects (of Electric Storage type) that the model had prior to the measure  
	
	##write final conditions message

		Final conditions message should be indicate that 1 Electric Storage water heater was added, the loop name it was added to, and the capacity in units of Watts

__________________________________________________________

OS:WaterHeater:Mixed object attributes

	1) attribute setTankVolume 

		if object_to_be_created = NCTH or B10 Benchmark then 

			shw_heater.storage_Tank_Volume = (result of lookup of Electric Storage Tank Table (#bdr,#bath)) * 0.9 . ## NOTE Convert table values of gallons to m3 units for assignment) 
			
			## NOTE For all electric WHs, the actual tank volume should be 0.90 * nominal volume

			write info message of object_to_be_created and shw_heater.storage_Tank_Volume

		if object_to_be_created = BA Retrofit then 

			shw_heater.storage_Tank_Volume(storage_Tank_Volume), write info message printed of use case and volume
			
			write info message of object_to_be_created and shw_heater.storage_Tank_Volume

		if object_to_be_created = General and storage_Tank_Volume = 0 then

			shw_heater.setTankVolume("Autosized").

			write info message of object_to_be_created and shw_heater.storage_Tank_Volume

			else shw_heater.setTankVolume(storage_Tank_Volume * 0.90)  ## NOTE For all electric WHs, the actual tank volume should be 0.90 * nominal volume
			
			write info message of object_to_be_created and shw_heater.storage_Tank_Volume

	2) attribute setSetpointTemperatureSchedule 

		if object_to_be_created = NCTH or B10 Benchmark or BA Retrofit then 

			create a new hot water temp schedule where Tsetpoint = constant 125F schedule (all 8760 hours, needs to be converted into Celsius for E+ input) 
			
			## Note here is a code snippet for this 
			#	shw_temp = OpenStudio::convert(125,"F","C").get
			#	shw_temp_sch = OpenStudio::Model::ScheduleRuleset.new(model)
			#	shw_temp_sch.setName("SHW Set Temp")
			#	shw_sch.defaultDaySchedule().setName("SHW Set Temp Default")
			#	shw_sch.defaultDaySchedule().addValue(OpenStudio::Time.new(0,24,0,0),shw_c)
      
			assign the created temp schedule to shw_temp
			
			shw_heater.setSetpointTemperatureSchedule(shw_temp_sch)			

			write info message "A schedule named <shw_temp_sch.getName> was created and applied to <Water Heater Name>, using a constant temperature of 125 F for generating service hot water." 
			
			if object_to_be_created = General then 

			create a new hot water temp schedule where Tsetpoint = shw_Setpoint_Temperature

			assign the created temp schedule to shw_heater.setpoint_Temperature_Schedule 

			shw_heater.setSetpointTemperatureSchedule(setpoint_Temperature_Schedule			

			write info message "A schedule named <shw_temp_sch.getName> was created and applied to <Water Heater Name>, using a constant temperature of <shw_Setpoint_Temperature> for generating service hot water."		


	3) attribute setDeadbandTemperatureDifference
		
			shw_heater.setDeadbandTemperatureDifference(2)  ## Note Constant per BA House Simulation Protocols
		
			write info message of setDeadbandTemperatureDifference
			
	4) attribute shw_heater.setMaximumTemperatureLimit(100) ##Note: Input is in Deg C, 212 converted to Deg C for OS assignment.

			write info message of shw_heater.MaximumTemperatureLimit
	
	5) attribute shw_heater.setHeaterControlType("Modulate")

			write info message of shw_heater.HeaterControlType

	6) attribute shw_heater.setHeaterMaximumCapacity 
	
		if object_to_be_created = NCTH or B10 Benchmark then 

			shw_heater.setHeaterMaximumCapacity =  lookup result of lookup of Electric Storage Tank table (#bdr,#bath). ## NOTE units need to be in converted to W for input

			write info message of shw_heater.HeaterMaximumCapacity

		if object_to_be_created = BA Retrofit or General then  
			
			shw_heater.setHeaterMaximumCapacity(water_Heater_Nominal_Capacity)

			write info message of shw_heater.HeaterMaximumCapacity

		
	7) attribute shw_heater.setHeaterMinimumCapacity(0)

			write info message of shw_heater.HeaterMinimumCapacity

	8) attribute shw_heater.setHeaterFuelType("Electric")

			write info message of shw_heater.HeaterFuelType

	9) attribute shw_heater.setHeaterThermalEfficiency(1.0)

			write info message of shw_heater.HeaterThermalEfficiency

	10) attribute shw_heater.setPartLoadFactorCurve = OPTIONAL - NOT USED

	11) attribute shw_heater.setOffCycleParasiticFuelConsumptionRate = OPTIONAL - NOT USED

	12) attribute shw_heater.setOffCycleParasiticFuelType = OPTIONAL - NOT USED

	13) attribute shw_heater.setOffCycleParasiticHeatFractiontoTank = OPTIONAL - NOT USED

	14) attribute shw_heater.setOnCycleParasiticFuelConsumptionRate - OPTIONAL - NOT USED

	15) attribute shw_heater.setOnCycleParasiticFuelType = OPTIONAL - NOT USED

	16) attribute shw_heater.setOnCycleParasiticHeatFractiontoTank = OPTIONAL - NOT USED

	17) attribute shw_heater.setAmbientTemperatureIndicator("Zone")

			write info message of shw_heater.AmbientTemperatureIndicator

	18) attribute shw_heater.setAmbientTemperatureSchedule = OPTIONAL - NOT USED
	
	19) attribute shw_heater.setAmbientTemperatureThermalZone = water_Heater_Location

	20) attribute shw_heater.setAmbientTemperatureOutdoorAirNodeName = OPTIONAL - NOT USED

	21) attribute shw_heater.setOffCycleLossCoefficienttoAmbientTemperature  ##SOurce = Cell N4594, Options Sheet of BA_Analysis_FY10.xlsm spreadsheet

		TTank = 135 ## Note units Deg F

		UA = 41073 * 1 / (rated_Energy_Factor) - 1) / ((TTank - 67.5) * 24)

		##Note UA units should be BTU / hr-Deg F
		##Note Source = Options tab of BA Analysis Spreadsheet
		
		Assume TEnvironment = 67.5 F 

		convert UA into Watts/Kelvin for input in to OpenStudio

		shw_heater.setOffCycleLossCoefficienttoAmbientTemperature(converted result of UA)

		write info message of shw_heater.OffCycleLossCoefficienttoAmbientTemperature

	22) attribute shw_heater.setOffCycleLossFractiontoThermalZone = 1.0

		write info message of shw_heater.OffCycleLossFractiontoThermalZone 

	23) attribute shw_heater.setOnCycleLossCoefficienttoAmbientTemperature = convert off_cycle_loss

		write info message of shw_heater.OnCycleLossCoefficienttoAmbientTemperature 

	24) attribute shw_heater.setOnCycleLossFractiontoThermalZone = 1.0

		write info message of shw_heater.OnCycleLossFractiontoThermalZone

	25) attribute shw_heater.setPeakUseFlowRate = OPTIONAL - NOT USED

	26) attribute shw_heater.setUseFlowRateFractionSchedule = OPTIONAL - NOT USED

	27) attibute shw_heater.setColdWaterSupplyTemperatureSchedule = OPTIONAL - NOT USED

	28) attribute shw_heater.setUseSideEffectiveness(1.0)

		write info message of shw_heater.UseSideEffectiveness

	29) attribute shw_heater.setSourceSideEffectiveness(1.0) 

		write info message of shw_heater.SourceSideEffectiveness

	30) attribute shw_heater.setUseSideDesignFlowRate = "autosize"

	31) attribute shw_heater.setSourceSideDesignFlowRate = OPTIONAL - NOT USED

	32) attribute shw_heater.setIndirectWaterHeatingRecoveryTime - OPTIONAL - Not Used



## End of measure


Tests:

Need to create a model with 

1) No existing hot water system, but empty 
# get arguments and test that they are what we are expecting
# set arguments to bad values and see that it fails as expected
# set arguments to match E+ idd default values 
# set arguments to good values (not default values)
# Run twice, set arguments to good values on model working default


