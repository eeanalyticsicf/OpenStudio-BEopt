NREL Measure Design Document Text File

Note: you can include ruby snippets for arguments and messaged, but it isn't necessary. If you are comfortable with it, it makes writing the measure quicker if the code is already structured here.

EnergyPlus 8.1 documentation reference: http://bigladdersoftware.com/epx/docs/8-1/input-output-reference/page-008.html#sitewatermainstemperature

>> Start of XML content

Measure Name: 	Modify Site:WaterMainsTemperature
Measure Type: 	ModelMeasure

Tag		Service Hot Water.Water Heating

Description:
This measure updates the cold water temperatures delivered by underground water main pipes to the building. Water mains temperatures are a function of outdoor 
climate conditions and vary with time of year. Users input two arguments: 1) The average annual outdoor air temperature (dry bulb, deg F) and 
2) The maximum difference in monthly average outdoor air temperatures (dry bulb, deg F). The arguments are used in a correlation formulated to predict the water mains temperatures. 
All OS:WaterUse:Equipment, OS:WaterHeater:Mixed, OS:WaterHeater:Stratified (not supported as of OS1.4.0) or OS WaterUse:Connections objects included in your model will use this 
temperature as the cold water inlet temperature. See the EnergyPlus Engineering Reference for correlation details.

Model Description:
The measure will update the OS:Site:WaterMainsTemperature object. The object will be configured to use the correlation method and will accept two user arguments 
1) The average annual outdoor air temperature (dry bulb, deg F) and 2) The maximum difference in monthly average outdoor air temperatures (dry bulb, deg F). 

OpenStudio Version: 1.4.0

>> Start of Measure.rb content

Arguments:

1) Average Annual Outdoor Air Temp
	Required:		Yes
	Type: 			DoubleArgument
	Display Name: 		Avg Annual Outdoor Air Temperature (?F)
	Default Value:		50

2) Maximum Difference in Monthly Outdoor Air Temp
	Required:		Yes
	Type: 			DoubleArgument
	Display Name: 		Max Difference in Monthly Outdoor Air Temp (?F)
	Default Value:		30

Error Message:

Validate input arguments. 

If Avg Outdoor Air Temp > 85 F 	#Death Valley, USA  = 77 F
If Avg Outdoor Air Temp < -70 F	#Vostock, Antartica = -67 F

If Max Diff OAT > 40 			#Death Valley, USA  ~ 30 F
If Max Diff OAT < 0 			# Cannot have negative numbers

Warning Message:

If Avg Outdoor Air Temp = 50 F 		#Default
If Avg Outdoor Air Temp > 70 F		#Note Death Valley, USA = 77 F
If Avg Outdoor Air Temp < -40F		#Note Vostock, Antartica = -67 F

If Max Diff OAT > 30 			#Note Death Valley, USA  ~ 30 F

Info Message:
#Loop through to count each of these objects
 
# 	OS:WaterUse:Equipment
#	OS:WaterHeater:Mixed
#	OS:WaterUse:Connections 

	# List quantity of each object that will be affected by the change 	in inlet water temperature. 

Not Applicable Message:

Loop through to count each of these objects
 
# 	OS:WaterUse:Equipment
#	OS:WaterHeater:Mixed
#	OS:WaterUse:Connections 

If sum of count of these objects = 0 then measure is Not Applicable. Write N/A message objects echoing such.

Initial Condition:

#Report any existing SiteWaterMains objects and the values of the avg annual temp and temp range. Might be zero objects.


Final Condition:

#Report the creation of a new SiteWaterMains objects and the values of the avg annual temp and temp range.

Code Outline:


>> Start of MyMeasure_Test.rb content

# Get arguments from user

# convert argument method variable into run method variables

# test run method variable for warning messages

# test model for N/A message


#Create new object

new_SiteWaterMains = OpenStudio::Model::SiteWaterMainsTemperature.new(model)

new_SiteWaterMains.setcalculationMethod(Correlation)
new_SiteWaterMains.annualAverageOutdoorAirTemperature(annual_temp)
new_SiteWaterMains.annualAverageOutdoorAirTemperature(annual_temp)
new_SiteWaterMains.maximumDifferenceInMonthlyAverageOutdoorAirTemperatures(temp_range)


#If a new object is created, Create info messages

# End of measure


Tests:
# get arguments and test that they are what we are expecting
# set arguments to bad values and see that it fails as expected
# set arguments to match E+ idd default values (10C on model with working default hot water system and usage. Confirm no difference in HW energy

# set arguments to good values (not default values) on model working default hot water system and usage. Confirm difference in HW energy usage.
# Run twice, set arguments to good values on model working default 	hot water system and usage. Confirm difference in HW energy usage.

## Note - future enhancement may be to parse the weather file to automatically determine the measure argument. 
## There's already a measure that parses the .stat file to determine arguments (https://bcl.nrel.gov/search/site/mains?f[0]=bundle%3Anrel_measure), could be useful for the future enhancement if there's time
